// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task__007.Models;

#nullable disable

namespace Task__007.Migrations
{
    [DbContext(typeof(Task007Context))]
    partial class Task007ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Task__007.Models.Address", b =>
                {
                    b.Property<int>("AddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("add_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddId"));

                    b.Property<string>("Buildingname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("City")
                        .HasColumnType("int")
                        .HasColumnName("city");

                    b.Property<int>("Pincode")
                        .HasColumnType("int")
                        .HasColumnName("pincode");

                    b.Property<int?>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.HasKey("AddId")
                        .HasName("PK__address__273FC77EC1EBD05D");

                    b.HasIndex("City");

                    b.HasIndex("State");

                    b.ToTable("address", (string)null);
                });

            modelBuilder.Entity("Task__007.Models.ConfDetail", b =>
                {
                    b.Property<int>("Cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cid"));

                    b.Property<int?>("Cadd")
                        .HasColumnType("int")
                        .HasColumnName("cadd");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Food")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("food");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("image");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Cid")
                        .HasName("PK__conf_det__D837D05FCEC8DEB6");

                    b.HasIndex("Cadd");

                    b.ToTable("conf_details", (string)null);
                });

            modelBuilder.Entity("Task__007.Models.Hotel", b =>
                {
                    b.Property<int>("Hid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Hid"));

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<int?>("City")
                        .HasColumnType("int")
                        .HasColumnName("city");

                    b.Property<string>("Hname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("hname");

                    b.Property<int?>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.HasKey("Hid")
                        .HasName("PK__hotels__DF101B018A652D5F");

                    b.HasIndex("Cid");

                    b.HasIndex("City");

                    b.HasIndex("State");

                    b.ToTable("hotels", (string)null);
                });

            modelBuilder.Entity("Task__007.Models.Object", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("Typeid")
                        .HasColumnType("int")
                        .HasColumnName("typeid");

                    b.HasKey("Id")
                        .HasName("PK__objects__3213E83FBAE468D7");

                    b.HasIndex("Typeid");

                    b.ToTable("objects", (string)null);
                });

            modelBuilder.Entity("Task__007.Models.ObjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parentId");

                    b.HasKey("Id")
                        .HasName("PK__object_t__3213E83FB2131020");

                    b.ToTable("object_type", (string)null);
                });

            modelBuilder.Entity("Task__007.Models.Order", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("oid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<DateTime?>("BookedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("booked_date");

                    b.Property<int?>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<int?>("Hid")
                        .HasColumnType("int")
                        .HasColumnName("hid");

                    b.Property<int?>("Uid")
                        .HasColumnType("int")
                        .HasColumnName("uid");

                    b.HasKey("Oid")
                        .HasName("PK__orders__C2FFCF13649A464A");

                    b.HasIndex("Cid");

                    b.HasIndex("Hid");

                    b.HasIndex("Uid");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("Task__007.Models.Role", b =>
                {
                    b.Property<int>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rid"));

                    b.Property<string>("Role1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.HasKey("Rid")
                        .HasName("PK__roles__C2B7EDE8ADF0D7CE");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("Task__007.Models.Speaker", b =>
                {
                    b.Property<int>("Sid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sid"));

                    b.Property<int?>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("cid");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("image");

                    b.Property<DateTime?>("Intime")
                        .HasColumnType("datetime")
                        .HasColumnName("intime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("Outtime")
                        .HasColumnType("datetime")
                        .HasColumnName("outtime");

                    b.HasKey("Sid")
                        .HasName("PK__speakers__DDDFDD3629E9884D");

                    b.HasIndex("Cid");

                    b.ToTable("speakers", (string)null);
                });

            modelBuilder.Entity("Task__007.Models.User", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Uid"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<int?>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role")
                        .HasDefaultValueSql("((2))");

                    b.Property<string>("Uname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("uname");

                    b.HasKey("Uid")
                        .HasName("PK__users__DD70126453300451");

                    b.HasIndex("Role");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Task__007.Sp_models.Getalldata_Sp", b =>
                {
                    b.Property<string>("buildingname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cadd")
                        .HasColumnType("int");

                    b.Property<int>("cid")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("food")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotels")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pincode")
                        .HasColumnType("int");

                    b.Property<string>("speakers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Getalldata_Sp");
                });

            modelBuilder.Entity("Task__007.Models.Address", b =>
                {
                    b.HasOne("Task__007.Models.Object", "CityNavigation")
                        .WithMany("Addresses")
                        .HasForeignKey("City")
                        .HasConstraintName("FK__address__city__37A5467C");

                    b.HasOne("Task__007.Models.ObjectType", "StateNavigation")
                        .WithMany("Addresses")
                        .HasForeignKey("State")
                        .HasConstraintName("FK__address__state__38996AB5");

                    b.Navigation("CityNavigation");

                    b.Navigation("StateNavigation");
                });

            modelBuilder.Entity("Task__007.Models.ConfDetail", b =>
                {
                    b.HasOne("Task__007.Models.Address", "CaddNavigation")
                        .WithMany("ConfDetails")
                        .HasForeignKey("Cadd")
                        .HasConstraintName("FK__conf_detai__cadd__3B75D760");

                    b.Navigation("CaddNavigation");
                });

            modelBuilder.Entity("Task__007.Models.Hotel", b =>
                {
                    b.HasOne("Task__007.Models.ConfDetail", "CidNavigation")
                        .WithMany("Hotels")
                        .HasForeignKey("Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__hotels__cid__3E52440B");

                    b.HasOne("Task__007.Models.Object", "CityNavigation")
                        .WithMany("Hotels")
                        .HasForeignKey("City")
                        .HasConstraintName("FK__hotels__city__3F466844");

                    b.HasOne("Task__007.Models.ObjectType", "StateNavigation")
                        .WithMany("Hotels")
                        .HasForeignKey("State")
                        .HasConstraintName("FK__hotels__state__403A8C7D");

                    b.Navigation("CidNavigation");

                    b.Navigation("CityNavigation");

                    b.Navigation("StateNavigation");
                });

            modelBuilder.Entity("Task__007.Models.Object", b =>
                {
                    b.HasOne("Task__007.Models.ObjectType", "Type")
                        .WithMany("Objects")
                        .HasForeignKey("Typeid")
                        .HasConstraintName("FK__objects__typeid__34C8D9D1");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Task__007.Models.Order", b =>
                {
                    b.HasOne("Task__007.Models.ConfDetail", "CidNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("Cid")
                        .HasConstraintName("FK__orders__cid__48CFD27E");

                    b.HasOne("Task__007.Models.Hotel", "HidNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("Hid")
                        .HasConstraintName("FK__orders__hid__49C3F6B7");

                    b.HasOne("Task__007.Models.User", "UidNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("Uid")
                        .HasConstraintName("FK__orders__uid__47DBAE45");

                    b.Navigation("CidNavigation");

                    b.Navigation("HidNavigation");

                    b.Navigation("UidNavigation");
                });

            modelBuilder.Entity("Task__007.Models.Speaker", b =>
                {
                    b.HasOne("Task__007.Models.ConfDetail", "CidNavigation")
                        .WithMany("Speakers")
                        .HasForeignKey("Cid")
                        .HasConstraintName("FK__speakers__cid__4222D4EF");

                    b.Navigation("CidNavigation");
                });

            modelBuilder.Entity("Task__007.Models.User", b =>
                {
                    b.HasOne("Task__007.Models.Role", "RoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("Role")
                        .HasConstraintName("FK__users__role__2C3393D0");

                    b.Navigation("RoleNavigation");
                });

            modelBuilder.Entity("Task__007.Models.Address", b =>
                {
                    b.Navigation("ConfDetails");
                });

            modelBuilder.Entity("Task__007.Models.ConfDetail", b =>
                {
                    b.Navigation("Hotels");

                    b.Navigation("Orders");

                    b.Navigation("Speakers");
                });

            modelBuilder.Entity("Task__007.Models.Hotel", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Task__007.Models.Object", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("Task__007.Models.ObjectType", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Hotels");

                    b.Navigation("Objects");
                });

            modelBuilder.Entity("Task__007.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Task__007.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
